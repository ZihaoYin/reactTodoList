{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","name","App","showAddTask","setShowAddTask","setTasks","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75b9d8ef.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n    return (\r\n            <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title,onAdd,showAdd}) => {\r\n\r\n\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n\r\n      <Button\r\n        onClick = {onAdd}\r\n        color={showAdd ? 'red' : 'green'}\r\n        text={showAdd ? 'Close' : 'Add'}\r\n      />\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder':''}`} onDoubleClick={()=> onToggle(task.id)}>\r\n            <h3>{task.text}\r\n                <FaTimes style={{color: 'red', cursor:'pointer'}} onClick={()=>onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n\r\n\r\n\r\n","import Task from \"./Task\"\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n  \r\n    return (\r\n        <>\r\n            {tasks.map((task)=>(\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({text,day,reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label >Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e)=>{\r\n                    setText(e.target.value)\r\n                }}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label >Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e)=>{\r\n                    setDay(e.target.value)\r\n                }}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label >Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e)=>{\r\n                    setReminder(e.currentTarget.checked)\r\n                }}/>\r\n            </div>  \r\n            <input type=\"submit\" value='SaveTask' className=\"btn btn-block\" name=\"\" id=\"\" />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport {useState} from 'react'\nimport AddTask from \"./components/AddTask\";\n\nfunction App(){\n  const [showAddTask, setShowAddTask] = useState(true)\n\n  const [tasks, setTasks] =  useState([\n    {\n      id:1,\n      text: \"Doctor Appointment\",\n      day:\"Feb 5th at 2:30pm\",\n      reminder: true,\n    },{\n      id:2,\n      text:'Meeting at School',\n      day:\"Feb 5th at 2:30pm\",\n      reminder: false,\n    }\n  ])\n\n  //Add Task\nconst addTask = (task) =>{\n  const id = Math.floor(Math.random()*10000) +1 \n  const newTask = {id,...task}\n  setTasks([...tasks,newTask])\n}\n\n  //Delete Task\n  const deleteTask = (id) =>{\n    setTasks(tasks.filter((task)=>task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) =>{\n    setTasks(tasks.map((task)=> task.id === id ? {...task,reminder: !task.reminder}:task))\n  }\n\n  const showAddTaskHelper = ()=>{\n    setShowAddTask(!showAddTask)\n    console.log(showAddTask)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header\n          onAdd={showAddTaskHelper}\n          showAdd={showAddTask}\n      />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length>0? <Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask}/> : 'No Tasks To Show' }\n  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}